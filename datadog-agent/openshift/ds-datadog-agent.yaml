apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: datadog-agent
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: datadog-agent
      name: datadog-agent
    spec:
      serviceAccountName: datadog-agent
      containers:
      - image: datadog/agent:latest
        imagePullPolicy: Always
        name: datadog-agent
        env:
          # DD Default stuff
          - name: DD_API_KEY
            # value: <YOUR_API_KEY>
            valueFrom:
              secretKeyRef:
                # See secrets.yaml.example
                name: dd-secrets
                key: dd_api_key
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: KUBERNETES
            value: "yes"
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          # Other env variables
          - name: ENV
            valueFrom:
              configMapKeyRef:
                name: cm-other-env
                key: MY_ENV
        # Other environment variables from ConfigMap cm-datadog-env
        envFrom:
          - configMapRef:
              name: cm-datadog-env
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
          # DD Default stuff
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          # # DD Log collection setup
          # - name: pointerdir
          #   mountPath: /opt/datadog-agent/run
          # DD conf.d and checks.d
          - # Example: Mount a volume. Each data item will be created as a file.
            name: vol-datadog-confd
            mountPath: /conf.d
          - # Example: Custom check
            name: vol-datadog-checksd
            mountPath: /opt/datadog-agent/checks.d/hello.py
            subPath: hello.py
          - name: emptydir
            mountPath: /etc/datadog-agent/conf.d/disk.d/
      #     - # Example: Mount/overwrite a specific file
      #       name: file-datadog-kubernetes
      #       mountPath: /etc/datadog-agent/datadog-kubernetes.yaml
      #       subPath: datadog-kubernetes-yaml
      #   # Others stuff
      #     - name: ssl-certs
      #       mountPath: /etc/kubernetes/ssl
      volumes:
        # DD Default stuff
        - hostPath:
            path: /var/run/docker.sock
          name: dockersocket
        - hostPath:
            path: /proc
          name: procdir
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroups
      #   # DD Log collection setup
      #   - name: pointerdir
      #     hostPath:
      #       path: /var/run/datadog-agent.run
      #     # configMap:
      #     #   name: datadogtoken
        # DD conf.d and checks.d
        - name: file-datadog-kubernetes
          configMap:
            name: cm-datadog-yaml
        - name: vol-datadog-confd
          configMap:
            name: cm-datadog-confd
            # items:  # If you want to be more specific
            #   - key: logs.yaml
            #     path: agentlogs.yaml
        - name: vol-datadog-checksd
          configMap:
            name: cm-datadog-checksd
        # Others stuff
      #   - name: ssl-certs
      #     hostPath:
      #       path: /etc/kubernetes/ssl
        - name: emptydir
          emptyDir: {}
